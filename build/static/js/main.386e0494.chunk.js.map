{"version":3,"sources":["services/phonebook.js","components/SearchFilter.js","components/NameForm.js","components/SearchDisplay.js","components/Message.js","App.js","index.js"],"names":["baseUrl","axios","get","newPerson","post","id","newInfo","put","delete","SearchFilter","newSearch","handleSearch","value","onChange","NameForm","submitInput","newName","handleNameInput","newNb","handleNbInput","onSubmit","type","SearchDisplay","persons","setPersons","displayPersons","filter","person","name","toLowerCase","indexOf","handleDel","event","window","confirm","target","parentNode","noteService","then","res","toString","map","key","number","onClick","Message","message","color","className","App","useState","setNewName","setNewNb","setSearch","newMessage","setMessage","setColor","useEffect","response","data","displayMessage","setTimeout","preventDefault","nameList","numberList","idList","nameObject","console","log","personIndex","includes","catch","err","alert","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.386e0494.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    return axios.get(baseUrl)\n}\n\nconst create = (newPerson) => {\n    return axios.post(baseUrl, newPerson)\n}\n\nconst update = (id, newInfo) => {\n    return axios.put(`${baseUrl}/${id}`, newInfo)\n}\n\nconst remove = (id) => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default {\n    getAll, create, update, remove\n}","import React from 'react'\n\nconst SearchFilter = ({newSearch, handleSearch}) => {\n    return (<div>filter shown with <input value={newSearch} onChange={handleSearch} /></div>)\n}\n\nexport default SearchFilter","import React from 'react'\n\nconst NameForm = ({submitInput, newName, handleNameInput, newNb, handleNbInput}) => {\n    return (\n        <form onSubmit={submitInput}>\n            <div>\n                name: <input value={newName} onChange={handleNameInput} />\n            </div>\n            <div>number: <input value={newNb} onChange={handleNbInput}/></div>\n            <div>\n                <button type=\"submit\" >add</button>\n            </div>\n        </form>\n    )\n\n}\n\nexport default NameForm","import React from 'react'\nimport noteService from '../services/phonebook'\n\nconst SearchDisplay = ({persons, newSearch, setPersons}) => {\n    const displayPersons = persons.filter(person => {\n        return person.name.toLowerCase().indexOf(newSearch.toLowerCase()) !== -1\n    })\n    const handleDel = (event) => {\n        const confirm = window.confirm(`Are you sure you want to delete ${event.target.parentNode.id}?`)\n        if (confirm) {\n            const id = event.target.id\n        noteService.remove(id).then(res => {\n            setPersons(persons.filter((person) =>{\n            return person.id.toString() !== id\n            }))    \n        })}\n            return null\n        }\n    return (\n        <div>{displayPersons.map(person => <p key={person.name} id={person.name}>{person.name} {person.number}  <button id={person.id} key={person.name} onClick={handleDel}>Delete</button></p>)\n            }</div>\n    )\n}\n\nexport default SearchDisplay","import React from 'react'\nimport '../index.css'\n\nconst Message = ({message, color}) => {\n    if (message === null) {\n        return null\n    } else if (message && color === 'red') {\n        return (\n            <div className='redMessage'>\n                <p>{message}</p>\n            </div>\n        )\n    } \n    return (\n            <div className='greenMessage'>\n                <p>{message}</p>\n            </div>\n    )\n}\n\nexport default Message","import React, { useState, useEffect } from 'react'\nimport noteService from './services/phonebook'\nimport SearchFilter from './components/SearchFilter'\nimport NameForm from './components/NameForm'\nimport SearchDisplay from './components/SearchDisplay'\nimport Message from './components/Message'\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNb, setNewNb] = useState('')\n    const [newSearch, setSearch] = useState('')\n    const [newMessage, setMessage] = useState(null)\n    const [color, setColor] = useState('')\n\n    // Render all the people in phonebook\n    useEffect(() => {\n        noteService.getAll().then(response => {\n            setPersons(response.data)\n        })\n    }, [])\n\n    // Display messages and reset newName and newNb\n    const displayMessage = (color, message) => {\n        setMessage(message)\n        setColor(color)\n        setTimeout(() => {setMessage(null)}, 5000)\n        setNewName('')\n        setNewNb('')\n    }\n\n    // Handle input submission\n    const submitInput = (event) => {\n        event.preventDefault()\n        const nameList = persons.map(person => person.name)\n        const numberList = persons.map(person => person.number)\n        const idList = persons.map(person => person.id)\n        const nameObject = {\n            name: newName,\n            number: newNb\n        }\n        console.log(idList)\n        const personIndex = nameList.indexOf(newName)\n        // Logic handling names and numbers\n        if (nameList.includes(newName)) {\n            if (numberList[personIndex] !== newNb) {\n                const changeNbConfirm = window.confirm(newName + ' is already added to phonebook. Do you want to replace the old number with the new one?')\n                if (changeNbConfirm) {\n                    noteService.update(idList[personIndex], {...nameObject, number: newNb}).then(res => {\n                        // Update number of the person\n                        persons[personIndex] = res.data\n                        setPersons(persons)\n                        displayMessage('green', `New number ${newNb} is saved to name ${newName}`)\n                    }).catch(err => {\n                        // When name and number no longer exist\n                        console.log(err)\n                        displayMessage('red', `Sorry, name ${newName} was removed from phonebook.`)\n                        setPersons(persons.filter((person) =>{\n                            return person.id !== idList[personIndex]\n                            }))\n                    })\n                } return null\n            } else if (numberList[personIndex] === newNb) {\n                // When the name and number already exist\n                alert(`${newName} and the number ${newNb} is already added to phonebook`)\n            }\n        } else if(nameList.indexOf(newName) === -1) {\n                // When the name is new\n                noteService.create(nameObject).then(response => {\n                    console.log(response)\n                    setPersons(persons.concat(response.data))\n                    displayMessage('green', `New number ${newNb} is saved to name ${newName}`)\n                })\n            }\n        }\n    \n    const handleNameInput = (event) => {\n        setNewName(event.target.value)\n    }\n    const handleNbInput = (event) => {\n        setNewNb(event.target.value)\n    }\n    const handleSearch = (event) => {\n        setSearch(event.target.value)\n    }\n    \n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Message message={newMessage} color={color}/>\n            <SearchFilter newSearch={newSearch} handleSearch={handleSearch} />\n            <h2> Add a New</h2>\n            <NameForm submitInput={submitInput} newName={newName} handleNameInput={handleNameInput} newNb={newNb} handleNbInput={handleNbInput} />\n            <h2>Numbers</h2>\n            <SearchDisplay persons={persons} newSearch={newSearch} setPersons={setPersons}/>\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}